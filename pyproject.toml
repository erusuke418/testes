[tool.ruff]
exclude = [
   ".git",
   "bootloader",
   "build",
   "dist",
   "doc/_build",
   "doc/conf.py",
   "PyInstaller/lib",
   "tests/functional/data/name_clash_with_entry_point",
   "tests/functional/data/sphinx/conf.py",
   "tests/unit/test_modulegraph",
]
ignore = ["PLC1901"]
line-length=120
select = [
  "C90",     # McCabe cyclomatic complexity
  "DTZ",     # flake8-datetimez
  "E",       # pycodestyle
  "F",       # Pyflakes
  "INT",     # flake8-gettext
  "PLC",     # Pylint conventions
  "PLE",     # Pylint errors
  "PLR091",  # Pylint refactor just for max-args, max-branches, etc.
  "PYI",     # flake8-pyi
  "T10",     # flake8-debugger
  "W",       # pycodestyle
  "YTT",     # flake8-2020
]
# show-source = true

[tool.ruff.mccabe]
max-complexity = 52

[tool.ruff.pylint]
max-args = 42
max-branches = 65
max-returns = 13
max-statements = 148

[tool.towncrier]
	filename = "doc/CHANGES.rst"
	directory = "news"
	template = "news/_template.rst"
	underlines = "-~^"
	wrap = true
	package = "PyInstaller"
	title_format = "{version} ({project_date})"

	[[tool.towncrier.section]]
		path = ""

	[[tool.towncrier.type]]
		directory = "feature"
		name = "Features"
		showcontent = true

	[[tool.towncrier.type]]
		directory = "bugfix"
		name = "Bugfix"
		showcontent = true

	[[tool.towncrier.type]]
		directory = "breaking"
		name = "Incompatible Changes"
		showcontent = true

	[[tool.towncrier.type]]
		directory = "deprecation"
		name = "Deprecations"
		showcontent = true

	[[tool.towncrier.type]]
		directory = "hooks"
		name = "Hooks"
		showcontent = true

	[[tool.towncrier.type]]
		directory = "bootloader"
		name = "Bootloader"
		showcontent = true

	[[tool.towncrier.type]]
		directory = "moduleloader"
		name = "Module Loader"
		showcontent = true

	[[tool.towncrier.type]]
		directory = "doc"
		name = "Documentation"
		showcontent = true

	[[tool.towncrier.type]]
		directory = "process"
		name = "Project & Process"
		showcontent = true

	[[tool.towncrier.type]]
		directory = "core"
		name = "PyInstaller Core"
		showcontent = true

	[[tool.towncrier.type]]
		directory = "tests"
		name = "Test-suite and Continuous Integration"
		showcontent = true

	[[tool.towncrier.type]]
		directory = "build"
		name = "Bootloader build"
		showcontent = true

[tool.yapf]
indent_width = 4
column_limit = 120
dedent_closing_brackets = true
spaces_before_comment = "2"
space_between_ending_comma_and_closing_bracket = 0
coalesce_brackets = true
blank_line_before_nested_class_or_def = false

[build-system]
# Tells pip to install wheel before trying to install PyInstaller
# from an sdist or from Github.
# Installing without wheel uses legacy `python setup.py install`
# which has issues with unicode paths.
requires = [
	"wheel",
	"setuptools >= 42.0.0",
]
